package Com.hibernate.mapping;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class MapDemo {
	public static void main(String[] args) {

		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory factory = cfg.buildSessionFactory();

		// creating Questions
		Question q1 = new Question();
		q1.setQuestionId(1212);
		q1.setQuestion("What is Java?");

		// Creating object of Answer
		Answer a1 = new Answer();
		a1.setAnsId(343);
		a1.setAnswer("Jave is a programing language.");
		a1.setQuestion(q1);

		q1.setAnswer(a1);
		
		Question q2 = new Question();
		q2.setQuestionId(242);
		q2.setQuestion("What is collection framework?");

	
		Answer a2 = new Answer();
		a2.setAnsId(344);
		a2.setAnswer("API to work with group of Objects.");
		a2.setQuestion(q2);

		q2.setAnswer(a2);
		
		Question q3 = new Question();
		q3.setQuestionId(234324);
		q3.setQuestion("How to work with Netbeans?");

		
		Answer a3 = new Answer();
		a3.setAnsId(777);
		a3.setAnswer("IDE for writing codes.");
		a3.setQuestion(q3);

		q3.setAnswer(a3);

		// session to save

		Session session = factory.openSession();
		Transaction trx = session.beginTransaction();
		
		//saving in DB
		session.save(q1);
		session.save(q2);
		session.save(q3);
		session.save(a1);
		session.save(a2);
		session.save(a3);
		
  
		trx.commit();
		
		
		//fetching after bi-directional mapping
		 Question ques=(Question)session.get(Question.class, 344);
		 System.out.println(ques.getQuestion());
		 System.out.println(ques.getAnswer().getAnswer());
		session.close();
		factory.close();

	}

}
